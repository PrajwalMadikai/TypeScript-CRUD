<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login | Admin</title>
    <!-- Bootstrap 5 CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            display: flex;
            height: 100vh;
        }
        .sidebar {
            width: 250px;
            background-color: #f8f9fa;
            padding: 20px;
            border-right: 1px solid #dee2e6;
        }
        .sidebar h4 {
            margin-bottom: 20px;
            font-weight: bold;
        }
        .content {
            flex-grow: 1;
            padding: 20px;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }
        ul li {
            margin: 10px 0;
        }
        ul li a {
            text-decoration: none;
            color: #007bff;
        }
        ul li a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <h4>Admin</h4>
        <ul>
            <li><a href="#" id="view-students">Students</a></li>
            <li><a href="/logout">Logout</a></li>
        </ul>
    </div>

    <div class="content">
        <h3>Students List</h3>
         
        <table class="table table-striped">
            <thead>
              <tr>
                <th> </th>
                <th>Name</th>
                <th>Email</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="students-list">
              <% if (students && students.length > 0) { %>
                <% students.forEach((student, index) => { %>
                  <tr>
                    <td><%= index + 1 %></td>
                    <td><%= student.name %></td>
                    <td><%= student.email %></td>
                    <td>
                      <button class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editModal<%= student._id %>">Edit</button>
                      <button class="btn btn-dark btn-sm delete-btn" data-user-id="<%= student._id %>">Delete</button>
                    </td>
                  </tr>
            
                  <!-- Modal for editing user -->
                  <div class="modal fade" id="editModal<%= student._id %>" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content" >
                        <div class="modal-header">
                          <h5 class="modal-title" id="editModalLabel">Edit User</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form id="editForm<%= student._id %>" method="POST">
                          <div class="modal-body">
                            <div class="mb-3">
                              <label for="name<%= student._id %>" class="form-label">Name</label>
                              <input type="text" class="form-control" id="name<%= student._id %>" name="name" value="<%= student.name %>" required>
                            </div>
                            <div class="mb-3">
                              <label for="email<%= student._id %>" class="form-label">Email</label>
                              <input type="email" class="form-control" id="email<%= student._id %>" name="email" value="<%= student.email %>" required>
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="4">No students found</td>
                </tr>
              <% } %>
            </tbody>
            
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
      <!-- SweetAlert and Bootstrap JS -->
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
      <script>
 document.querySelectorAll('form').forEach(form => {
  form.addEventListener('submit', async (e) => {
    e.preventDefault(); // Prevent default form submission

    const userId = form.getAttribute('id').replace('editForm', '');  // Extract userId from the form ID
    const formData = new FormData(form);  // Get form data
    const data = Object.fromEntries(formData.entries());  // Convert form data to JSON

    try {
      // Send data to the backend using fetch
      const response = await fetch(`/admin/edit/${userId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),  // Send data as JSON
      });

      const responseData = await response.json();  // Parse the JSON response

      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: responseData.message || 'User details updated successfully!',
          timer: 2000,
          showConfirmButton: false,
        });

        setTimeout(() => {
          location.href='/admin/dashboard'
        }, 2000);
        return
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: responseData.message || 'Failed to update user details.',
        });
        return
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An unexpected error occurred.',
      });
      return
    }
  });
});


document.querySelectorAll('.delete-btn').forEach(button => {
    button.addEventListener('click', async (e) => {
      const userId = button.getAttribute('data-user-id');

      const confirmResult = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      });

      if (confirmResult.isConfirmed) {
        try {
          const response = await fetch(`/admin/delete/${userId}`, {
            method: 'DELETE'
          });

          const result = await response.json();

          if (response.ok) {
            Swal.fire(
              'Deleted!',
              'The user has been deleted.',
              'success'
            );

            setTimeout(() => {
              location.reload(); // Reload the page to reflect the changes
            }, 1500);
            return
          } else {
            Swal.fire('Error!', result.message || 'Failed to delete the user.', 'error');
            return
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire('Error!', 'An unexpected error occurred.', 'error');
          return
        }
      }
    });
  });
        

  
        </script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  </body>
  </html>
